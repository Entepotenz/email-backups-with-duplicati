---
# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Create and publish a Docker image

# yamllint disable-line rule:truthy
on:
  schedule:
    - cron: "5 4 * * 0" # At 04:05 on Sunday
  push:
    branches:
      - main
      - master
    tags:
      - "v*.*.*"
  pull_request:
    branches:
      - main
      - master

# cancel a currently running workflow from the same PR, branch or tag when a new workflow is triggered
# source: https://stackoverflow.com/questions/66335225/how-to-cancel-previous-runs-in-the-pr-when-you-push-new-commitsupdate-the-curre/67939898#67939898
concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

env:
  REGISTRY_GITHUB: ghcr.io
  IMAGE_NAME: ${{ github.repository }}
  BUILD_PLATFORMS: "linux/amd64"
  BASE_IMAGE: "library/fedora:latest"

jobs:
  check-pre-condition:
    name: evaluate if container should be build
    runs-on: ubuntu-latest
    timeout-minutes: 5
    permissions:
      contents: read
    outputs:
      condition_met: ${{ steps.set_output.outputs.run_jobs }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5

      - id: string_lower_case
        uses: Entepotenz/change-string-case-action-min-dependencies@5278bdd8405cb5124456eedb559582f1839fcc86 # v1
        with:
          string: ${{ env.IMAGE_NAME }}

      - name: Docker Image Update Checker
        id: baseupdatecheck
        uses: georg-jung/docker-image-update-checker@d338fc30c0b65a077d21edbaff00d3c850ffeca8 # main
        with:
          base-image: ${{ env.BASE_IMAGE }}
          image: ${{ env.REGISTRY_GITHUB }}/${{ steps.string_lower_case.outputs.lowercase }}:latest
          verbose: true
          github_token: ${{ secrets.TOKEN }}

      - name: determine if we should build
        id: set_output
        env:
          IMAGE_NEEDS_UPDATE: ${{ steps.baseupdatecheck.outputs.needs-updating }}
          GIT_EVENT_NAME: ${{ github.event_name }}
        run: |
          if [ "$IMAGE_NEEDS_UPDATE" = "true" ] || [ "$GIT_EVENT_NAME" = "push" ] || [ "$GIT_EVENT_NAME" = "pull_request" ]; then
            echo "run_jobs=true" >> "$GITHUB_OUTPUT"
            echo "### We need to build a new docker image! :rocket:" >> "$GITHUB_STEP_SUMMARY"
          else
            echo "run_jobs=false" >> "$GITHUB_OUTPUT"
            echo "### Everything is already up-to-date!" >> "$GITHUB_STEP_SUMMARY"
          fi
          {
            echo "IMAGE_NEEDS_UPDATE:='$IMAGE_NEEDS_UPDATE'"
            echo "GIT_EVENT_NAME:='$GIT_EVENT_NAME'"
          } >> "$GITHUB_STEP_SUMMARY"

  build-and-push-image:
    runs-on: ubuntu-latest
    needs: [check-pre-condition]
    if: needs.check-pre-condition.outputs.condition_met == 'true'
    timeout-minutes: 20
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5

      - name: Set up QEMU
        uses: docker/setup-qemu-action@29109295f81e9208d7d86ff1c6c12d2833863392 # v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@e468171a9de216ec08956ac3ada2f0791b6bd435 # v3

      - name: Login to GitHub Container Registry
        uses: docker/login-action@5e57cd118135c172c3672efd75eb46360885c0ef # v3
        if: github.event_name != 'pull_request'
        with:
          registry: ${{ env.REGISTRY_GITHUB }}
          username: ${{ github.repository_owner }}
          password: ${{ secrets.TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@c1e51972afc2121e065aed6d45c65596fe445f3f # v5
        with:
          images: ${{ env.REGISTRY_GITHUB }}/${{ env.IMAGE_NAME }}
          tags: |
            type=ref,event=branch
            type=raw,value=latest,enable=${{ github.ref == format('refs/heads/{0}', github.event.repository.default_branch) }}
          flavor: |
            latest=auto
            prefix=
            suffix=

      - name: Build and push Docker image
        uses: docker/build-push-action@263435318d21b8e681c14492fe198d362a7d2c83 # v6
        with:
          context: ./run-docker-compose/offlineimap-docker/
          platforms: ${{ env.BUILD_PLATFORMS }}
          pull: true
          file: ./run-docker-compose/offlineimap-docker/Dockerfile
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
